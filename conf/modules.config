/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]
    withName: TIMESTAMP {
        container = 'public.ecr.aws/o8h2f0o1/epitome-base:1.5'
        publishDir = [
            path: { "${params.outdir}/" },
            pattern: "none"
        ]
    }
    withName: NCBI_DATA {
        container = 'public.ecr.aws/o8h2f0o1/ncbi-data:1.0'
        ext.args = '--complete-only'
        publishDir = [
            path: { "${params.outdir}/${taxon}/ncbi-data/" },
        ]
    }
    withName: SEQTK_NCBI {
        publishDir = [
            path: { "${params.outdir}/" },
            pattern: "none"
        ]
    }
    withName: MERGE_INPUTS {
        container = 'public.ecr.aws/o8h2f0o1/epitome-base:1.5'
        publishDir = [
            path: { "${params.outdir}/${taxon.replaceAll(' ','_')}/${segment}/input/" },
            pattern: "*"
        ]
    }
    withName: INPUT_QC {
        container = 'public.ecr.aws/o8h2f0o1/epitome-base:1.5'
        publishDir = [
            path: { "${params.outdir}/${taxon.replaceAll(' ','_')}/${segment}/qc" }
        ]
    }
    withName: MASH_TOP {
        publishDir = [
            path: { "${params.outdir}/${taxon.replaceAll(' ','_')}/${segment}/clusters" },
            pattern: "*.txt.gz"
        ]
    }
    withName: MASH_REMAINDER {
        publishDir = [
            path: { "${params.outdir}/${taxon.replaceAll(' ','_')}/${segment}/clusters" },
            pattern: "*"
        ]
    }
    withName: MASH_LOOSEENDS {
        publishDir = [
            path: { "${params.outdir}/${taxon.replaceAll(' ','_')}/${segment}/clusters" },
            pattern: "*.txt.gz"
        ]
    }
    withName: MASH_CONDENSE {
        publishDir = [
            path: { "${params.outdir}/${taxon.replaceAll(' ','_')}/${segment}/clusters" },
            pattern: "*.txt.gz"
        ]
    }
    withName: CLUSTER_MAIN {
        container = 'public.ecr.aws/o8h2f0o1/epitome-base:1.5'
        publishDir = [
            path: { "${params.outdir}/${taxon.replaceAll(' ','_')}/${segment}/clusters" }
        ]
    }
    withName: CLUSTER_LOOSEENDS {
        container = 'public.ecr.aws/o8h2f0o1/epitome-base:1.5'
        publishDir = [
            path: { "${params.outdir}/${taxon.replaceAll(' ','_')}/${segment}/clusters" }
        ]
    }
    withName: ASSIGN_REMAINDER {
        container = 'public.ecr.aws/o8h2f0o1/epitome-base:1.5'
        publishDir = [
            path: { "${params.outdir}/${taxon.replaceAll(' ','_')}/${segment}/clusters" }
        ]
    }   
    withName: SEQTK_SUBSEQ {
        publishDir = [
            path: { "${params.outdir}/" },
            pattern: "none"
        ]
    }
    withName: SEQTK_LOOSEENDS {
        publishDir = [
            path: { "${params.outdir}/" },
            pattern: "none"
        ]
    }
    withName: MERGE_CLUSTERS {
        container = 'public.ecr.aws/o8h2f0o1/epitome-base:1.5'
        publishDir = [
            path: { "${params.outdir}/${taxon.replaceAll(' ','_')}/${segment}/clusters" }
        ]
    }
    withName: MAFFT {
        publishDir = [
            path: { "${params.outdir}/${taxon.replaceAll(' ','_')}/${segment}/alignments" },
            pattern: "*.fa"
        ]
    }
    withName: CONSENSUS {
        container = 'public.ecr.aws/o8h2f0o1/epitome-base:1.5'
        publishDir = [
            path: { "${params.outdir}/${taxon.replaceAll(' ','_')}/${segment}/consensus" },
            pattern: "none"
        ]
    }
    withName: CONDENSE {
        container = 'public.ecr.aws/o8h2f0o1/epitome-base:1.5'
        publishDir = [
            path: { "${params.outdir}/${taxon.replaceAll(' ','_')}/${segment}/consensus" },
            pattern: "*.fa.gz"
        ]
    }
    withName: SUMMARY {
        container = 'public.ecr.aws/o8h2f0o1/epitome-base:1.5'
        publishDir = [
            path: { "${params.outdir}/${taxon.replaceAll(' ','_')}/${segment}/" },
            pattern: "*.csv"
        ]
    }
    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }
    withName: 'MULTIQC' {
        ext.args   = params.multiqc_title ? "--title \"$params.multiqc_title\"" : ''
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
}
